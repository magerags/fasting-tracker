import Head from "next/head";
import Image from "next/image";
import styled from "styled-components";
import { mdiCreation } from "@mdi/js";
import Icon from "@mdi/react";
import { useQuery } from "@tanstack/react-query";
import { useState } from "react";
import useMush from "../hooks/useMush";

export default function Home() {
  const [createMushochi, setCreateMushochi] = useState(false);
  const [mushochiName, setMushochiName] = useState("");

  const { data: allMushes } = useQuery({
    queryKey: ["AllMushochi"],
    queryFn: async () => {
      const response = await fetch("https://mushochi-t-default-rtdb.europe-west1.firebasedatabase.app/.json");
      return response.json();
    },
  });

  const { getMush, createMush, updateMush } = useMush(mushochiName);
  const { data: mushData } = getMush;

  function handleSubmit() {
    if (mushochiName) {
      createMush(mushochiName);
    }
  }

  return (
    <>
      <Head>
        <title>Mushochi</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Wrapper>
        <Content>
          <Title>Welcome</Title>
          {/* <Description>Please select your Mushochi :)</Description> */}
          <Button onClick={() => setCreateMushochi(true)}>
            Create a new Mushochi <Icon size={"16px"} path={mdiCreation} />
          </Button>
          {createMushochi && (
            <>
              <Label>Choose a name</Label>
              <Input type="text" value={mushochiName} onChange={(e) => setMushochiName(e.target.value)} />
              <Enter onClick={handleSubmit}>Submit</Enter>
            </>
          )}
        </Content>
      </Wrapper>
    </>
  );
}

const Wrapper = styled.div`
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100dvh;
`;

const Content = styled.div`
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 12px;
`;

const Title = styled.h1`
  font-size: 80px;
  transition: all 0.5s ease-in-out;
  font-weight: 700;
  color: #ffffff;
`;

const Button = styled.button`
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 10px 20px;
  border-radius: 5px;
  border: 1px solid #fff;
  font-weight: 600;
  background-color: #000;
  color: #fff;
  cursor: pointer;
  transition: all 0.3s ease-in-out;
  font-size: 20px;
  gap: 4px;

  &:hover {
    background-color: #fff;
    color: #000;
  }
`;

const Description = styled.p`
  font-size: 20px;
  color: #fff;
`;

const Label = styled.label``;

const Input = styled.input``;

const Enter = styled.button``;
